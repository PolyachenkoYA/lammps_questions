package		intel 1
suffix		hybrid intel omp

dimension	3
boundary	p p p

atom_style	bond
bond_style 	fene
pair_style	hybrid/overlay lj/cut 1. gauss 1.
special_bonds	fene
neighbor	0.3 bin

read_data	lattice.data

# ========== vvv the difference vvv ===========
include		bad.def
# ========== ^^^ the difference ^^^ ===========
comm_modify cutoff 9.3

pair_modify	shift yes

timestep	0.001

fix		1 all langevin 1.0 1.0 10.0 7
fix		2 all nve

# ============== deform works fine in both cases ========
# Change the box size to reach the required density:
variable	Lz equal 563.8811277622556
variable	Lxy equal 27.57054832851779
variable	deformNsteps equal 50000   # BD_full
variable	deformRxyVar equal "ln(v_Lxy / lx) / (v_deformNsteps * dt)"
variable	deformRzVar equal "ln(v_Lz / lz) / (v_deformNsteps * dt)"
variable	deformRxy equal ${deformRxyVar}
variable	deformRz equal ${deformRzVar}
fix		3 all deform 1 x trate ${deformRxy} y trate ${deformRxy} z trate ${deformRz}

dump dumpDeform all xyz 1000 bad_deform.xyz
thermo		1000
thermo_style	custom step fmax temp pe pxx pyy pzz pxy pxz pyz density xlo lx ylo ly zlo lz
log		bad_deform.log

run		${deformNsteps}
change_box	all x final 0.0 ${Lxy} y final 0.0 ${Lxy} z final 0.0 ${Lz} remap    # exponential deform moves the box origin

unfix		3
undump		dumpDeform

# ============== prod fails with small enough Rc ========
dump dumpProd	all xyz 20000 bad_prod.xyz

thermo_style	custom step fmax temp pe pxx pyy pzz pxy pxz pyz
thermo_modify	flush yes
thermo		20000
log		bad_prod.log

restart		100000 bad_prod_1.restart bad_prod_2.restart

run		2000000000
